version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - NETWORK=mainnet
    volumes:
      - mainnet:/usr/src/app/storage
      - type: volume
        source: mainnet
        target: /usr/src/app/storage

  nodejs_stage:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs_stage
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - "9000:9000"
    environment:
      - PORT=9000
      - NETWORK=stagenet
    volumes:
      - stagenet:/usr/src/app/storage
      - type: volume
        source: stagenet
        target: /usr/src/app/storage

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - nodejs
      - nodejs_stage
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email alfonzotrez@protonmail.com --agree-tos --no-eff-email --force-renewal -d vanaheimex.com  -d www.vanaheimex.com

volumes:
  certbot-etc:
  certbot-var:
  web-root:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /root/devs/explorer_server/dhparam/
      o: bind
  stagenet:
    driver: local
  mainnet:
    driver: local

networks:
  app-network:
    driver: bridge

